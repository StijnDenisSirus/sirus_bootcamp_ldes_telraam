name: telraam_observations
description: This pipeline will take data from Telraam ldes server and send to an Azure function
input:
  name: Ldio:LdesClient
  config:
    urls: https://telraam-api.net/ldes/observations/by-time?year=2024&month=06&day=22
    sourceFormat: text/turtle
    retries:
      enabled: true
    #state: postgres
    #postgres:
    #  url: jdbc:postgresql://postgres-dsh-acc.postgres.database.azure.com/db_ldio_state
    #  username: ldio
    #  password: unix8GLOAT4boor
transformers:
  - name: Ldio:SparqlConstructTransformer
    config:
      query: |
        PREFIX geojson: <https://purl.org/geojson/vocab#>
        PREFIX location: <http://sw.deri.org/2006/07/location/loc#>
        PREFIX locn: <http://www.w3.org/ns/locn#>
        PREFIX terms: <http://purl.org/dc/terms/>
        PREFIX ngsi-ld: <https://uri.etsi.org/ngsi-ld/>
        PREFIX OM: <http://def.isotc211.org/iso19156/2011/Observation#>
        PREFIX time: <http://www.w3.org/2006/time#>
        PREFIX sosa: <http://www.w3.org/ns/sosa/>
        PREFIX seb: <https://data.vlaanderen.be/ns/sensoren-en-bemonstering#>
        PREFIX schema: <https://schema.org/>
        PREFIX prov: <http://www.w3.org/ns/prov#>
        PREFIX verkeersmetingen: <https://data.vlaanderen.be/ns/verkeersmetingen#>
        PREFIX sf: <http://www.opengis.net/ont/sf#>
        PREFIX geosparql: <http://www.opengis.net/ont/geosparql#>
        PREFIX geojson: <https://purl.org/geojson/vocab#>

        CONSTRUCT {
          ?obs a verkeersmetingen:Verkeersmeting ;
          
          verkeersmetingen:kenmerkType [
            a ngsi-ld:Property;
            ngsi-ld:hasValue ?strkenmerktype
            ];
          
          verkeersmetingen:voertuigType [
            a ngsi-ld:Property;
            ngsi-ld:hasValue ?strvoertuigtype          
            ];
          
          OM:OM_Observation.result [
            a ngsi-ld:Property;
            ngsi-ld:hasValue ?strvalue
            ];
            
          schema:unitCode [
            a ngsi-ld:Property;
            ngsi-ld:hasValue ?strunit
            ];
            
          OM:OM_Observation.phenomenonTime [
            a ngsi-ld:Property;
            ngsi-ld:hasValue ?strbeginTime 
            ];
            
          ngsi-ld:location [
            a ngsi-ld:GeoProperty;
            ngsi-ld:hasValue [
              a geojson:Point;
              geojson:coordinates (
                ?lat
                ?lon
            )
            ]
          ]}

        WHERE {
          ?versieObs a verkeersmetingen:Verkeersmeting ;
          terms:isVersionOf ?obs ; 
          <https://implementatie.data.vlaanderen.be/ns/vsds-verkeersmetingen#Verkeerssnelheidsmeting.geobserveerdKenmerk>|<https://implementatie.data.vlaanderen.be/ns/vsds-verkeersmetingen#Verkeerstelling.geobserveerdKenmerk> [ 
            verkeersmetingen:voertuigType  ?voertuigtype ;
            <https://implementatie.data.vlaanderen.be/ns/vsds-verkeersmetingen#Verkeerssnelheidsmetingkenmerk.kenmerktype>|<https://implementatie.data.vlaanderen.be/ns/vsds-verkeersmetingen#Verkeerstellingkenmerk.kenmerktype>  ?kenmerktype
          ] ;
          verkeersmetingen:geobserveerdObject [ 
            a  verkeersmetingen:Verkeersmeetpunt;
            <http://def.isotc211.org/iso19156/2011/SamplingPoint#SF_SamplingPoint.shape> [ 
              a sf:Point;
              geosparql:asWKT  ?wkt
            ];
          ];
                    
          OM:OM_Observation.phenomenonTime/time:hasBeginning/time:inXSDDateTimeStamp ?beginTime ;
          #OM:OM_Observation.phenomenonTime/time:hasXSDDuration ?duration ;
          OM:OM_Observation.result/schema:value | <https://implementatie.data.vlaanderen.be/ns/vsds-verkeersmetingen#Verkeerstelling.tellingresultaat> ?value .
          
        OPTIONAL {
          ?versieObs OM:OM_Observation.result/schema:unitCode ?unit .
          }
        
        BIND (strafter(strbefore(str(?wkt), ' '), 'POINT(') as ?lat)
        BIND (strafter(strbefore(str(?wkt), ')'), ' ') as ?lon)
        BIND (str(?kenmerktype) as ?strkenmerktype)
        BIND (str(?voertuigtype) as ?strvoertuigtype)
        BIND (str(?value) as ?strvalue)
        BIND (IF(BOUND(?unit), str(?unit), 'aantal') as ?strunit)
        BIND (str(?beginTime) as ?strbeginTime)
        }
outputs:
  - name: Ldio:HttpOut
    config:
      endpoint: https://telraam-demo-upsertformat.azurewebsites.net/api/http_trigger_reformat
      content-type: application/ld+json
      rdf-writer:
        content-type: application/ld+json
        frame: |
          {
            "@context": "https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld",
            "@type": "https://data.vlaanderen.be/ns/verkeersmetingen#Verkeersmeting"
          }
